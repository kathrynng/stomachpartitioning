{"version":3,"sources":["images/stomach.png","images/sweets_Apple_Pie.png","images/food_Pretzel.png","images/sweets_jelly.png","images/food_Mixed_Nuts.png","images/food_Lasagna.png","images/food_Banh_Mi_Sandwich.png","images/food_BLT_Sandwich.png","images/food_Cheese_Ball.png","images/food_Chicken.png","images/food_Crab_Legs.png","images/food_Curry_Rice.png","images/food_Eggs_Benedict.png","images/food_Fish_and_Chips.png","images/food_Grilled_Salmon.png","images/food_Indian.png","images/food_Katsudon.png","images/food_Macaroni_and_Cheese.png","images/food_Nasu_Nibitashi.png","images/food_Sandwich.png","images/food_Spaghetti_Bolognese.png","images/food_Spaghetti_Carbonara.png","images/food_Shio_Ramen.png","images/sweet_Muffin.png","images/sweets_Crepe.png","images/sweets_icecream.png","images/sweets_Candy_Apple.png","images/sweets_Fruit_Tart.png","images/sweets_Honey_Toast.png","images/sweets_mille_crepe.png","images/computer_harddisk.png","components/Questions.js","components/images.js","components/Stomach.js","components/FoodBox.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","ApplePie","Pretzel","Jelly","Nuts","Lasanga","BanhMi","BLT","CheeseBall","Chicken","CrabLegs","CurryRice","EggsBen","FishChips","Salmon","Thali","Kastudon","MacCheese","Eggplants","Sandwich","spBolog","spCarbo","Ramen","Muffin","Crepe","IceCr","CandyApple","fruitTart","honeyToast","milleCrepe","ChooseStomachSize","onChange","useStore","StomachListStore","updateStomachList","stomachSizeSelected","event","size","target","id","type","payload","className","src","HardDisk","onClick","INITIAL_STATE","stomachSize","foodStomachId","foodItems","fullStomach","createStore","state","action","full","length","name","StomachList","food_id","food_type","food_name","stomachListItems","stomachListPrint","n","push","console","log","map","foodItem","key","FoodBox","props","value","currentFoodList","food1","food2","food3","food4","changeToFood","Foods","Math","floor","random","includes","setState","randomizeFood","newFoodList","bind","this","FoodSelect","onFoodChange","source","App","startGame","handleStart","Start","startParty","StomachImg","href","FoodToStomach","selectedSize","replay","GameNResult","onReplay","stomachList","Stomach","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ced2e04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stomach.e8567c77.png\";","module.exports = __webpack_public_path__ + \"static/media/sweets_Apple_Pie.03472f9f.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Pretzel.d66cb70d.png\";","module.exports = __webpack_public_path__ + \"static/media/sweets_jelly.dfe093e7.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Mixed_Nuts.59b0341d.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Lasagna.9cc7b6e0.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Banh_Mi_Sandwich.4e2c8a7e.png\";","module.exports = __webpack_public_path__ + \"static/media/food_BLT_Sandwich.87a816a3.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Cheese_Ball.562af3a0.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Chicken.cb99e2d2.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Crab_Legs.762cd760.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Curry_Rice.65812033.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Eggs_Benedict.6bf876c3.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Fish_and_Chips.c250b35d.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Grilled_Salmon.a393fe8a.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Indian.1ed6b83b.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Katsudon.1cf0b541.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Macaroni_and_Cheese.c460236d.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Nasu_Nibitashi.807ed34a.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Sandwich.702c8fa8.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Spaghetti_Bolognese.4787a915.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Spaghetti_Carbonara.1de20396.png\";","module.exports = __webpack_public_path__ + \"static/media/food_Shio_Ramen.1920b978.png\";","module.exports = __webpack_public_path__ + \"static/media/sweet_Muffin.cae53ed0.png\";","module.exports = __webpack_public_path__ + \"static/media/sweets_Crepe.07bf3368.png\";","module.exports = __webpack_public_path__ + \"static/media/sweets_icecream.31213bb0.png\";","module.exports = __webpack_public_path__ + \"static/media/sweets_Candy_Apple.cac66981.png\";","module.exports = __webpack_public_path__ + \"static/media/sweets_Fruit_Tart.742015eb.png\";","module.exports = __webpack_public_path__ + \"static/media/sweets_Honey_Toast.44ea41cb.png\";","module.exports = __webpack_public_path__ + \"static/media/sweets_mille_crepe.02259431.png\";","module.exports = __webpack_public_path__ + \"static/media/computer_harddisk.b9863ceb.png\";","import React, { Component } from 'react';\r\n\r\nclass QuestionCard extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div class=\".questionCard\">\r\n                <h1>Question</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default QuestionCard;","//For Future Reference: Deploy NodeJS, make API to scrape\r\n\r\nimport ApplePie from '../images/sweets_Apple_Pie.png'\r\nimport Pretzel from '../images/food_Pretzel.png'\r\nimport Jelly from '../images/sweets_jelly.png'\r\nimport Nuts from '../images/food_Mixed_Nuts.png'\r\nimport Lasanga from '../images/food_Lasagna.png'\r\nimport BanhMi from '../images/food_Banh_Mi_Sandwich.png'\r\nimport BLT from '../images/food_BLT_Sandwich.png'\r\nimport CheeseBall from '../images/food_Cheese_Ball.png'\r\nimport Chicken from '../images/food_Chicken.png'\r\nimport CrabLegs from '../images/food_Crab_Legs.png'\r\nimport CurryRice from '../images/food_Curry_Rice.png'\r\nimport EggsBen from '../images/food_Eggs_Benedict.png'\r\nimport FishChips from '../images/food_Fish_and_Chips.png'\r\nimport Salmon from '../images/food_Grilled_Salmon.png'\r\nimport Thali from '../images/food_Indian.png'\r\nimport Kastudon from '../images/food_Katsudon.png'\r\nimport MacCheese from '../images/food_Macaroni_and_Cheese.png'\r\nimport Eggplants from '../images/food_Nasu_Nibitashi.png'\r\nimport Sandwich from '../images/food_Sandwich.png'\r\nimport spBolog from '../images/food_Spaghetti_Bolognese.png'\r\nimport spCarbo from '../images/food_Spaghetti_Carbonara.png'\r\nimport Ramen from '../images/food_Shio_Ramen.png'\r\n\r\nimport Muffin from '../images/sweet_Muffin.png'\r\nimport Crepe from '../images/sweets_Crepe.png'\r\nimport IceCr from '../images/sweets_icecream.png'\r\nimport CandyApple from '../images/sweets_Candy_Apple.png'\r\nimport fruitTart from '../images/sweets_Fruit_Tart.png'\r\nimport honeyToast from '../images/sweets_Honey_Toast.png'\r\nimport milleCrepe from '../images/sweets_mille_crepe.png'\r\n\r\nexport default [\r\n    {\"name\" : \"Apple Pie\",\"source\": ApplePie, \"type\":\"sweet\"},\r\n    {\"name\" : \"Pretzel\",\"source\": Pretzel, \"type\":\"food\"},\r\n    {\"name\" : \"Jelly\",\"source\": Jelly, \"type\":\"sweet\"},\r\n    {\"name\" : \"Mixed Nuts\",\"source\": Nuts, \"type\":\"food\"},\r\n    {\"name\" : \"Lasanga\",\"source\": Lasanga, \"type\":\"food\"},\r\n    {\"name\" : \"Banh Mi\",\"source\": BanhMi, \"type\":\"food\"},\r\n    {\"name\" : \"BLT Sandwich\",\"source\": BLT, \"type\":\"food\"},\r\n    {\"name\" : \"Cheese Balls\",\"source\": CheeseBall, \"type\":\"food\"},\r\n    {\"name\" : \"Chicken\",\"source\": Chicken, \"type\":\"food\"},\r\n    {\"name\" : \"Crab Legs\",\"source\": CrabLegs, \"type\":\"food\"},\r\n    {\"name\" : \"Curry Rice\",\"source\": CurryRice, \"type\":\"food\"},\r\n    {\"name\" : \"Eggs Benedict\",\"source\": EggsBen, \"type\":\"food\"},\r\n    {\"name\" : \"Fish and Chips\",\"source\": FishChips, \"type\":\"food\"},\r\n    {\"name\" : \"Salmon\",\"source\": Salmon, \"type\":\"food\"},\r\n    {\"name\" : \"Thali\",\"source\": Thali, \"type\":\"food\"},\r\n    {\"name\" : \"Cutlet Bowl\",\"source\": Kastudon, \"type\":\"food\"},\r\n    {\"name\" : \"Mac N Cheese\",\"source\": MacCheese, \"type\":\"food\"},\r\n    {\"name\" : \"Braised Eggplant\",\"source\": Eggplants, \"type\":\"food\"},\r\n    {\"name\" : \"Sandwich\",\"source\": Sandwich, \"type\":\"food\"},\r\n    {\"name\" : \"Spaghetti Bolognese\",\"source\": spBolog, \"type\":\"food\"},\r\n    {\"name\" : \"Spaghetti Carbonara\",\"source\": spCarbo, \"type\":\"food\"},\r\n    {\"name\" : \"Ramen\",\"source\": Ramen, \"type\":\"food\"},\r\n\r\n    {\"name\" : \"Muffin\",\"source\": Muffin, \"type\":\"sweets\"},\r\n    {\"name\" : \"Crepe\",\"source\": Crepe, \"type\":\"sweets\"},\r\n    {\"name\" : \"Ice Cream\",\"source\": IceCr, \"type\":\"sweets\"},\r\n    {\"name\" : \"Candy Apple\",\"source\": CandyApple, \"type\":\"sweets\"},\r\n    {\"name\" : \"Fruit Tart\",\"source\": fruitTart, \"type\":\"sweets\"},\r\n    {\"name\" : \"Honey Toast\",\"source\": honeyToast, \"type\":\"sweets\"},\r\n    {\"name\" : \"Mille Crepe\",\"source\": milleCrepe, \"type\":\"sweets\"},\r\n    \r\n\r\n]","import React, { Component } from \"react\";\r\nimport { createStore, useStore } from \"react-hookstore\";\r\n\r\nimport HardDisk from \"../images/computer_harddisk.png\";\r\n\r\nexport function ChooseStomachSize({ onChange }) {\r\n  var [stomachList, updateStomachList] = useStore(StomachListStore);\r\n\r\n  function stomachSizeSelected(event) {\r\n    var size;\r\n    switch (event.target.id) {\r\n      case \"size25\":\r\n        size = 25;\r\n        break;\r\n      case \"size50\":\r\n        size = 50;\r\n        break;\r\n      case \"size99\":\r\n        size = 100;\r\n        break;\r\n    }\r\n\r\n    updateStomachList({ type: \"updateStomachSize\", payload: size });\r\n    onChange(event.target);\r\n  }\r\n\r\n  return (\r\n    <div className=\"chooseStomachSize\">\r\n      <img src={HardDisk} />\r\n      <h1>Select a Size</h1>\r\n      <div className=\"btn-grp\">\r\n        <button className=\"btn-size\" id=\"size25\" onClick={stomachSizeSelected}>\r\n          25 GB\r\n        </button>\r\n        <button className=\"btn-size\" id=\"size50\" onClick={stomachSizeSelected}>\r\n          50 GB\r\n        </button>\r\n        <button className=\"btn-size\" id=\"size99\" onClick={stomachSizeSelected}>\r\n          99 GB\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    stomachSize: 0,\r\n    foodStomachId: 0,\r\n    foodItems: [],\r\n    fullStomach: false,\r\n  }\r\n\r\nexport const StomachListStore = createStore(\r\n  \"stomachList\",\r\n  INITIAL_STATE,\r\n  (state, action) => {\r\n    switch (action.type) {\r\n      case \"add\":\r\n        const id = ++state.foodStomachId;\r\n        var full = state.foodItems.length >= state.stomachSize;\r\n        return {\r\n          ...state,\r\n          foodItems: [...state.foodItems, { id, name: action.payload }],\r\n          fullStomach: full,\r\n        };\r\n\r\n      case \"updateStomachSize\":\r\n        return {\r\n          ...state,\r\n          stomachSize: action.payload,\r\n        };\r\n    \r\n        case \"reset\":\r\n            return INITIAL_STATE\r\n    }\r\n  }\r\n);\r\n\r\nfunction StomachList() {\r\n  function createStomachListItems(food_id, food_type, food_name) {\r\n    return { food_id, food_type, food_name };\r\n  }\r\n  var [stomachListItems] = useStore(StomachListStore);\r\n  var stomachListPrint = [];\r\n\r\n  if (stomachListItems.foodItems.length === 0) {\r\n    return (\r\n      <div className=\"stomachList\">\r\n        <h1>Click a Treat to eat!</h1>\r\n      </div>\r\n    );\r\n  } else {\r\n    for (var n = 0; n < stomachListItems.length; n++) {\r\n      stomachListPrint.push(\r\n        createStomachListItems(\r\n          stomachListItems.foodItems[n].id,\r\n          stomachListItems.foodItems[n].type,\r\n          stomachListItems.foodItems[n].name\r\n        )\r\n      );\r\n    }\r\n    console.log(stomachListItems.fullStomach);\r\n    return (\r\n      <div className=\"stomachList\">\r\n        <h1>You Ate:</h1>\r\n        <div className=\"stomach-foodList\">\r\n          <ul>\r\n            {stomachListItems.foodItems.map((foodItem) => (\r\n              <li key={foodItem.id}>{foodItem.name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StomachList;\r\n","import React, { Component, useState, useEffect } from \"react\";\r\n\r\nimport Foods from \"./images\";\r\n\r\nimport {StomachListStore} from './Stomach'\r\nimport {useStore} from 'react-hookstore'\r\n\r\nclass FoodBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      food1: Foods[0],\r\n      food2: Foods[1],\r\n      food3: Foods[2],\r\n      food4: Foods[3],\r\n    };\r\n    this.onChange = this.onChange.bind(this) \r\n  }\r\n\r\n  onChange = (value) => {\r\n    var currentFoodList = [this.state.food1, this.state.food2, this.state.food3, this.state.food4]\r\n      var changeToFood = Foods[Math.floor(Math.random() * Foods.length)]\r\n      while (currentFoodList.includes(changeToFood)) changeToFood = Foods[Math.floor(Math.random() * Foods.length)]\r\n      this.setState({['food'+value]: changeToFood});\r\n  }\r\n\r\n  randomizeFood = () => {\r\n    var currentFoodList = [this.state.food1, this.state.food2, this.state.food3, this.state.food4]\r\n    var newFoodList = []\r\n    \r\n    for(var n = 1; n <= 4; n++){\r\n      var changeToFood = Foods[Math.floor(Math.random() * Foods.length)]\r\n      while (currentFoodList.includes(changeToFood) || newFoodList.includes(changeToFood))\r\n        var changeToFood = Foods[Math.floor(Math.random() * Foods.length)]\r\n      newFoodList.push(changeToFood)\r\n  }\r\n  for(var n = 1; n <= 4; n++)\r\n    this.setState({['food'+n]: newFoodList[n-1]});\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className='foodArea'>\r\n        <button className='random-btn' onClick={this.randomizeFood}>Randomize</button>\r\n      <div id=\"FoodSelection\">\r\n        <FoodSelect\r\n          onFoodChange={this.onChange}\r\n          id=\"1\"\r\n          name={this.state.food1.name}\r\n          type={this.state.food1.type}\r\n          source={this.state.food1.source}\r\n        />\r\n        <FoodSelect\r\n          onFoodChange={this.onChange}\r\n          id=\"2\"\r\n          name={this.state.food2.name}\r\n          type={this.state.food2.type}\r\n          source={this.state.food2.source}\r\n        />\r\n        <FoodSelect\r\n          onFoodChange={this.onChange}\r\n          id=\"3\"\r\n          name={this.state.food3.name}\r\n          type={this.state.food3.type}\r\n          source={this.state.food3.source}\r\n        />\r\n        <FoodSelect\r\n          onFoodChange={this.onChange}\r\n          id=\"4\"\r\n          name={this.state.food4.name}\r\n          type={this.state.food4.type}\r\n          source={this.state.food4.source}\r\n        />\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default FoodBox;\r\n\r\nfunction FoodSelect({ onFoodChange, id, name, source, type}){\r\n\r\n  const [stomachList, updateStomachList] = useStore(StomachListStore)\r\n\r\n  function changeFood(){\r\n    updateStomachList({type: \"add\", payload: name})\r\n    onFoodChange(id);\r\n  };\r\n\r\n\r\n  return (\r\n      <div className=\"food-card\" onClick={changeFood}>\r\n        <img src={source} />\r\n        <h2>{name}</h2>\r\n      </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport StomachImg from './images/stomach.png';\r\nimport \"./App.css\";\r\n\r\nimport {useStore} from 'react-hookstore'\r\n\r\nimport QuestionCard from \"./components/Questions\";\r\nimport FoodBox from \"./components/FoodBox\";\r\nimport StomachList, { ChooseStomachSize, StomachListStore } from \"./components/Stomach\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    startGame: false,\r\n  };\r\n\r\n  handleStart = (event) => {\r\n    this.setState({\r\n      startGame: true,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"main\">\r\n          <div className=\"mainArea\">\r\n            {this.state.startGame ? (\r\n              <FoodToStomach />\r\n            ) : (\r\n              <Start onChange={this.handleStart} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nclass Start extends Component {\r\n  startParty = (event) => {\r\n    this.props.onChange(event.target);\r\n  };\r\n  render() {\r\n    return (\r\n      <div id=\"startPart\">\r\n        <img src={StomachImg}/>\r\n        <h1>Stomach Partitioning</h1>\r\n        <h2>How much can you eat?</h2>\r\n        <button className=\"start-btn\" onClick={this.startParty}>\r\n          Start\r\n        </button>\r\n        <h2><a href=\"https://github.com/kathrynng/stomachpartitioning\">By Kathryn Ng (GH Page)</a></h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass FoodToStomach extends Component {\r\n  state = {\r\n    selectedSize: false,\r\n  };\r\n  selectedSize = (event) => {\r\n    this.setState({\r\n      selectedSize: true,\r\n    });\r\n  };\r\n  replay = (event) => {\r\n    this.setState({\r\n      selectedSize: false\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.selectedSize ? (\r\n          <GameNResult onReplay={this.replay}/>\r\n        ) : (\r\n          <div id=\"stomachSize\">\r\n            <ChooseStomachSize onChange={this.selectedSize} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction GameNResult({onReplay}){\r\n  const [stomachList, updateStomachList] = useStore(StomachListStore)\r\n\r\n  var fullStomach = stomachList.fullStomach\r\n\r\n  function replayGame(event){\r\n    updateStomachList({type:'reset'})\r\n    onReplay(event.target)\r\n  }\r\n\r\n  if(fullStomach){\r\n    return(\r\n      <div>\r\n        <h1>Congrats!</h1>\r\n        <StomachList />\r\n        <button className=\"start-btn\" onClick={replayGame}>Replay</button>\r\n        <h2><a href=\"https://github.com/kathrynng/stomachpartitioning\">Visit GH Page</a></h2>\r\n\r\n      </div>\r\n    )\r\n  }else{\r\n    return(\r\n      <div id=\"foodtostomach\">\r\n              <FoodBox />\r\n              <StomachList />\r\n            </div>\r\n    )\r\n    \r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}